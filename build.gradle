plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'org.terning'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('queryDslVersion', "5.0.0")
}

dependencies {

	// Spring Boot 기본 의존성
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// 테스트 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testRuntimeOnly 'com.h2database:h2'

	// PostgreSQL
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.3'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Gson
	implementation 'com.google.code.gson:gson:2.8.6'

	// Spring WebFlux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// Resilience4j
	implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.1.0'
	implementation 'io.github.resilience4j:resilience4j-reactor:2.1.0'

	// Spring Batch
	implementation 'org.springframework.boot:spring-boot-starter-batch'

	// Bucket4j
	implementation 'com.bucket4j:bucket4j-core:8.1.0'
}

def generatedDir = 'src/main/generated'

sourceSets {
	main.java.srcDirs += [generatedDir]
}

clean {
	delete file(generatedDir)
}
// =================================================

tasks.named('test') {
	useJUnitPlatform()
}
