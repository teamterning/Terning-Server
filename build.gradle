plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'org.terning'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('queryDslVersion', "5.0.0")
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// Database & Persistence
	implementation 'org.postgresql:postgresql:42.7.3'
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Security & Authentication
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// API Documentation
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// Developer Tools
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Utilities
	implementation 'com.google.code.gson:gson:2.8.6'
	implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.1.0'
	implementation 'io.github.resilience4j:resilience4j-reactor:2.1.0'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'com.h2database:h2'
}

// QueryDSL Settings
def queryDslSrcDir = 'src/main/generated/querydsl/'

tasks.withType(JavaCompile).configureEach {
	options.getGeneratedSourceOutputDirectory().set(file(queryDslSrcDir))
}

sourceSets {
	main.java.srcDirs += [queryDslSrcDir]
}

clean {
	delete file(queryDslSrcDir)
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
